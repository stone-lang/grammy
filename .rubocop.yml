---

plugins:
  - rubocop-rspec
  - rubocop-md
  - rubocop-performance

inherit_from:
  - https://raw.githubusercontent.com/booch/config_files/master/ruby/rubocop.yml

# WARNING: Include and Exclude directives are **not** additive! They wipe out any existing values.
AllCops:
  TargetRubyVersion: 3.4
  # Fail on any new cops that are added. I'll address them every time I upgrade RuboCop.
  NewCops: enable

# FIXME: I can't get any Ruby code sections in Markdown files to show any offenses.
# This assumes that unmarked code blocks are Ruby.
Markdown:
  WarnInvalid: true
  Autodetect: true

# Allow longer lines.
Layout/LineLength:
  Max: 160

# Use `{}` for blocks that return a value; otherwise use `do` and `end`.
# We make a few exceptions, mostly for RSpec. And for grammar and transform rules.
Style/BlockDelimiters:
  EnforcedStyle: semantic
  FunctionalMethods:
    - expect
  AllowedMethods:
    - rule
    - rule!
    - let
    - let!
    - subject

Layout/EmptyLinesAroundClassBody:
  Enabled: false
Layout/EmptyLinesAroundModuleBody:
  Enabled: false
Layout/EmptyLineBetweenDefs:
  Enabled: false
Layout/EmptyLinesAroundBlockBody:
  Enabled: false

# Be a bit more lenient with RSpec: don't require filename to match class; allow more than 1 expectation per example.
RSpec/SpecFilePathFormat:
  Enabled: False
RSpec/MultipleExpectations:
  Max: 10
RSpec/ExampleLength:
  Max: 20

RSpec/EmptyLineAfterSubject:
  Enabled: false

Naming/MethodName:
  AllowedPatterns:
    - '\AParser\z'

# Allow rules to use `+` without suggesting string interpolation.
Style/StringConcatenation:
  Enabled: false

Lint/AmbiguousOperatorPrecedence:
  Enabled: false

# Crashes, as of RuboCop 1.74.0.
Style/WordArray:
  Enabled: false

Performance/StringInclude:
  Enabled: false

Performance/RedundantMatch:
  Enabled: false

# Prefer `class X < Data.define(...)` over `X = Data.define(...)`.
# It makes nested constants work as expected.
# See https://allaboutcoding.ghinda.com/more-about-how-to-create-a-data-class-in-ruby for details.
Style/DataInheritance:
  Enabled: false

# Only disabling this so I can do 1-line `def` with a comment.
# EXAMPLE: `def foo = 123 # see xyz`
Style/CommentedKeyword:
  Enabled: false

# Count `new` as 1 line, for cases where we create nested structures.
# FIXME: CountAsOne only accepts array/hash/heredoc/method_call.
# I really want to have it just count `new` calls as a single line.
# Metrics/MethodLength:
#   Max: 10
#   CountAsOne:
#     - new
